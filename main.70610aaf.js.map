{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","document","addEventListener","event","target","nodeName","id","printMessage","message","body","querySelector","newMessage","createElement","className","innerText","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,SAASC,iBAAoBJ,GAAAA,OAAAA,GAAa,SAAAK,GACpCA,EAAMC,SAAWP,GACnBG,EAAkBF,UAAAA,OAAAA,EACdD,gCAAAA,OAAAA,EAAQQ,SAAiBR,UAAAA,OAAAA,EAAQS,GADrC,UAOR,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAOR,SAASS,cAAc,QAC9BC,EAAaV,SAASW,cAAc,OAE1CD,EAAWE,UAAY,UACvBF,EAAWG,UAAYN,EAEvBC,EAAKM,OAAOJ,IAGdK,OAAOC,QAAU,CACfrB,QAAAA,EACAW,aAAAA","file":"main.70610aaf.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    document.addEventListener(`${eventName}`, event => {\n      if (event.target === element) {\n        resolve(`It was ${eventName} on the element:\n          ${element.nodeName}, id: ${element.id}.`);\n      }\n    })\n  });\n}\n\nconst printMessage = (message) => {\n  const body = document.querySelector('body');\n  const newMessage = document.createElement('div');\n\n  newMessage.className = 'message';\n  newMessage.innerText = message;\n\n  body.append(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}